// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using OracleErrorExample.Infra;

namespace OracleErrorExample.Migrations
{
    [DbContext(typeof(LabDbContext))]
    [Migration("20190515193358_InitalCreate")]
    partial class InitalCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Oracle:ValueGenerationStrategy", OracleValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            modelBuilder.Entity("OracleErrorExample.Domain.ProjectProperties", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("PRJP_ID");

                    b.Property<string>("PrjpAdamDomainId")
                        .HasColumnName("PRJP_ADAM_DOMAIN_ID")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PrjpAdamDomainName")
                        .HasColumnName("PRJP_ADAM_DOMAIN_NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpAdamServerId")
                        .HasColumnName("PRJP_ADAM_SERVER_ID");

                    b.Property<string>("PrjpAssignedCloudAccounts")
                        .HasColumnName("PRJP_ASSIGNED_CLOUD_ACCOUNTS")
                        .HasMaxLength(4000)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpAutHostPoolId")
                        .HasColumnName("PRJP_AUT_HOST_POOL_ID");

                    b.Property<int?>("PrjpConcurrentRuns")
                        .HasColumnName("PRJP_CONCURRENT_RUNS");

                    b.Property<string>("PrjpCopiedFrom")
                        .HasColumnName("PRJP_COPIED_FROM")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpDiagnosticsServerId")
                        .HasColumnName("PRJP_DIAGNOSTICS_SERVER_ID");

                    b.Property<string>("PrjpDlgcMode")
                        .HasColumnName("PRJP_DLGC_MODE")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrjpDomain")
                        .HasColumnName("PRJP_DOMAIN")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpFuncProlongDuration")
                        .HasColumnName("PRJP_FUNC_PROLONG_DURATION");

                    b.Property<int?>("PrjpHostPoolId")
                        .HasColumnName("PRJP_HOST_POOL_ID");

                    b.Property<int?>("PrjpMachineLimit")
                        .HasColumnName("PRJP_MACHINE_LIMIT");

                    b.Property<int?>("PrjpMaxNumOfProlongs")
                        .HasColumnName("PRJP_MAX_NUM_OF_PROLONGS");

                    b.Property<string>("PrjpPc01")
                        .HasColumnName("PRJP_PC_01")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PrjpPc02")
                        .HasColumnName("PRJP_PC_02")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PrjpPc03")
                        .HasColumnName("PRJP_PC_03")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PrjpPc04")
                        .HasColumnName("PRJP_PC_04")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpProcProlongDuration")
                        .HasColumnName("PRJP_PROC_PROLONG_DURATION");

                    b.Property<int?>("PrjpProjectId")
                        .HasColumnName("PRJP_PROJECT_ID");

                    b.Property<string>("PrjpProjectName")
                        .HasColumnName("PRJP_PROJECT_NAME")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("PrjpProjectUid")
                        .HasColumnName("PRJP_PROJECT_UID")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("PrjpRecResEnabled")
                        .HasColumnName("PRJP_REC_RES_ENABLED")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("PrjpResLevel")
                        .HasColumnName("PRJP_RES_LEVEL")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("PrjpRsvNotificationWindow")
                        .HasColumnName("PRJP_RSV_NOTIFICATION_WINDOW");

                    b.Property<string>("PrjpRsvNotifyTo")
                        .HasColumnName("PRJP_RSV_NOTIFY_TO")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int>("PrjpRsvWaitBeforeNotifying")
                        .HasColumnName("PRJP_RSV_WAIT_BEFORE_NOTIFYING");

                    b.Property<int?>("PrjpRtsExLogAllowed")
                        .HasColumnName("PRJP_RTS_EX_LOG_ALLOWED");

                    b.Property<int?>("PrjpState")
                        .HasColumnName("PRJP_STATE");

                    b.Property<int>("PrjpStopRetryPercents")
                        .HasColumnName("PRJP_STOP_RETRY_PERCENTS");

                    b.Property<int?>("PrjpTimeSeriesDbKey")
                        .HasColumnName("PRJP_TIME_SERIES_DB_KEY");

                    b.Property<string>("PrjpToolsOptions")
                        .HasColumnName("PRJP_TOOLS_OPTIONS")
                        .IsUnicode(false);

                    b.Property<int?>("PrjpTotalVudsUsed")
                        .HasColumnName("PRJP_TOTAL_VUDS_USED");

                    b.Property<string>("PrjpUser01")
                        .HasColumnName("PRJP_USER_01")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpVerStamp")
                        .HasColumnName("PRJP_VER_STAMP");

                    b.Property<int?>("PrjpVudsLimit")
                        .HasColumnName("PRJP_VUDS_LIMIT");

                    b.Property<string>("PrjpVugenWorkingMode")
                        .IsRequired()
                        .HasColumnName("PRJP_VUGEN_WORKING_MODE")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("PrjpVuserLimit")
                        .HasColumnName("PRJP_VUSER_LIMIT");

                    b.HasKey("Id");

                    b.HasIndex("PrjpProjectUid", "PrjpState")
                        .HasName("LAB_PRJ_PROP_STATE_PUID_IDX");

                    b.ToTable("LAB_PROJECT_PROPERTIES");
                });
#pragma warning restore 612, 618
        }
    }
}
